#!/usr/bin/make -f
#
# (C) 2002-2008 Roland Rosenfeld <roland@debian.org>, based on
# Sample debian/rules that uses debhelper.
# This file is public domain software, originally written by Joey Hess. 

# Uncomment this to turn on verbose mode. 
#export DH_VERBOSE=1

# Include dpatch stuff.
include /usr/share/dpatch/dpatch.make

INSTDIR=`pwd`/debian/sunclock
INSTMAPDIR=`pwd`/debian/sunclock-maps

OPTIMIZE=
ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
        OPTIMIZE=-O0
else
        OPTIMIZE=-O2
endif

build: build-stamp
build-stamp:
	dh_testdir

	xmkmf
	$(MAKE) CDEBUGFLAGS="$(OPTIMIZE) -Wall -g" \
		XAPPLOADDIR=/etc/X11/app-defaults SELINUX_LIBS= \
		DOCDIR=/usr/share/doc/sunclock

	touch build-stamp

clean: clean1 unpatch
clean1:
	dh_testdir
	dh_testroot
	rm -f build-stamp 

	[ ! -f Makefile ] || $(MAKE) clean
	rm -f Makefile Makefile.bak

	dh_clean

install: build-stamp
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	$(MAKE) install install.man DESTDIR=$(INSTDIR)/usr \
		BINDIR=/bin MANDIR=/share/man/man1 MANSUFFIX=1 \
		DOCDIR=/usr/share/doc/sunclock

# 	install emx documentation
	mv $(INSTDIR)/usr/share/sunclock/editkit/README \
		$(INSTDIR)/usr/share/doc/sunclock/README.emx
	mv $(INSTDIR)/usr/share/sunclock/editkit/MANUAL.emacs \
		$(INSTDIR)/usr/share/doc/sunclock/MANUAL.emx
	install -m644 editkit/CHANGELOG \
		$(INSTDIR)/usr/share/doc/sunclock/changelog.emx
	rm -f $(INSTDIR)/usr/share/man/man1/emx.1

# 	little hack to have Sunclockrc in /etc:
#	Oddly, Debian seems to prefer having Sunclockrc in /etc ...
#	mv $(INSTDIR)/usr/share/sunclock/Sunclockrc $(INSTDIR)/etc
#	(cd $(INSTDIR)/usr/share/sunclock; ln -s /etc/Sunclockrc)

#	fix name of swedish i18n file:
#	mv $(INSTDIR)/usr/share/sunclock/i18n/Sunclock.se \
#	   $(INSTDIR)/usr/share/sunclock/i18n/Sunclock.sv

	for x in wm_icons/*.xpm; do \
		install -m644 $$x $(INSTDIR)/usr/share/pixmaps/; \
	done

#	move maps into sunclock-maps package
	mv $(INSTDIR)/usr/share/sunclock/earthmaps \
		$(INSTMAPDIR)/usr/share/sunclock

#	dh_install

# Build architecture-independent files here.
binary-indep: build-stamp install
	dh_testdir -i
	dh_testroot -i
	dh_installchangelogs -i CHANGES
	dh_installdocs -i
	dh_installexamples -i
#	dh_installmenu -i
#	dh_installdebconf -i
#	dh_installlogrotate -i
#	dh_installemacsen -i
#	dh_installcatalogs -i
#	dh_installpam -i
#	dh_installmime -i
#	dh_installinit -i
#	dh_installcron -i
#	dh_installinfo -i
#	dh_undocumented -i
	dh_installman -i
	dh_link -i
	dh_compress -i
	dh_fixperms -i
#	dh_perl -i
#	dh_python -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build-stamp install
	dh_testdir -a
	dh_testroot -a
	dh_installchangelogs -a CHANGES
	dh_installdocs -a
	dh_installexamples -a
	dh_installmenu -a
#	dh_installdebconf -a
#	dh_installlogrotate -a
#	dh_installemacsen -a
#	dh_installcatalogs -a
#	dh_installpam -a
#	dh_installmime -a
#	dh_installinit -a
#	dh_installcron -a
#	dh_installinfo -a
#	dh_undocumented -a
	dh_installman -a
	dh_strip -a
	dh_link -a
	dh_compress -a -XMANUAL.emx
	dh_fixperms -a
#	dh_perl -a
#	dh_python -a
#	dh_makeshlibs -a
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch

.PHONY: build clean binary-indep binary-arch binary install patch unpatch \
	clean1
